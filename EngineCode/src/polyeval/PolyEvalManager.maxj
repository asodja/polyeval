/**
 * Document: MaxCompiler Tutorial (maxcompiler-tutorial)
 * Chapter: 3      Example: 1      Name: Moving Average Simple
 * MaxFile name: MovingAverageSimple
 * Summary:
 * 	Manager for the three point moving average kernel design.
 *  All IO is between the CPU and the DFE.
 */
package polyeval;

import com.maxeler.maxcompiler.v2.build.EngineParameters;
import com.maxeler.maxcompiler.v2.kernelcompiler.Kernel;
import com.maxeler.maxcompiler.v2.managers.engine_interfaces.CPUTypes;
import com.maxeler.maxcompiler.v2.managers.engine_interfaces.EngineInterface;
import com.maxeler.maxcompiler.v2.managers.engine_interfaces.InterfaceParam;
import com.maxeler.maxcompiler.v2.managers.standard.Manager;
import com.maxeler.maxcompiler.v2.managers.standard.Manager.IOType;

class PolyEvalManager {
	public static void main(String[] args) {
		EngineParameters params = new EngineParameters(args);
		Manager manager = new Manager(params);

		// Instantiate the kernel
		Kernel kernel = new PolySimpleEvalKernel(manager.makeKernelParameters());
		// Kernel kernel = new PolySimpleSumKernel(manager.makeKernelParameters());

		manager.setKernel(kernel);
		manager.setIO(IOType.ALL_CPU); // Connect all kernel ports to
		manager.createSLiCinterface(getEngineInterface(kernel));
		manager.build();
	}

	private static EngineInterface getEngineInterface(Kernel kernel) {
		EngineInterface ei = new EngineInterface();

		InterfaceParam length = ei.addParam("length", CPUTypes.INT);
		InterfaceParam lengthInBytes = length * CPUTypes.FLOAT.sizeInBytes();
		InterfaceParam loopLength = ei.getAutoLoopOffset(kernel.getName(), "loopExpr");
		ei.ignoreAutoLoopOffset(kernel.getName(), "loopExpr");

		ei.setTicks(kernel.getName(), length * loopLength);

		ei.setStream("input", CPUTypes.FLOAT, lengthInBytes);
		ei.setStream("output", CPUTypes.FLOAT, lengthInBytes);
		return ei;
	}
}
